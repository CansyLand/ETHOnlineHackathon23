{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "greetingSetter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newGreeting",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "premium",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GreetingChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "greeting",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "premium",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newGreeting",
          "type": "string"
        }
      ],
      "name": "setGreeting",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userGreetingCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e0604052601c60a09081527f4275696c64696e6720556e73746f707061626c6520417070732121210000000060c0526001906200003e9082620001c1565b506002805460ff1916905560006003553480156200005b57600080fd5b5060405162000c4338038062000c438339810160408190526200007e916200028d565b806001600160a01b038116620000ae57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b981620000cc565b506001600160a01b0316608052620002bf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014757607f821691505b6020821081036200016857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001bc57600081815260208120601f850160051c81016020861015620001975750805b601f850160051c820191505b81811015620001b857828155600101620001a3565b5050505b505050565b81516001600160401b03811115620001dd57620001dd6200011c565b620001f581620001ee845462000132565b846200016e565b602080601f8311600181146200022d5760008415620002145750858301515b600019600386901b1c1916600185901b178555620001b8565b600085815260208120601f198616915b828110156200025e578886015182559484019460019091019084016200023d565b50858210156200027d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620002a057600080fd5b81516001600160a01b0381168114620002b857600080fd5b9392505050565b60805161095a620002e96000396000818161014d015281816102130152610281015261095a6000f3fe6080604052600436106100955760003560e01c8063ce606ee011610059578063ce606ee01461013b578063cea49c3c1461016f578063e0a73a931461019c578063ef690cc0146101c6578063f2fde38b146101e857600080fd5b80633ccfd60b146100a1578063715018a6146100b85780638da5cb5b146100cd57806397feba9d14610104578063a41368621461012857600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100b6610208565b005b3480156100c457600080fd5b506100b661033a565b3480156100d957600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011057600080fd5b5061011a60035481565b6040519081526020016100fb565b6100b66101363660046105f7565b61034e565b34801561014757600080fd5b506100e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561017b57600080fd5b5061011a61018a3660046106a8565b60046020526000908152604090205481565b3480156101a857600080fd5b506002546101b69060ff1681565b60405190151581526020016100fb565b3480156101d257600080fd5b506101db61042a565b6040516100fb919061071e565b3480156101f457600080fd5b506100b66102033660046106a8565b6104b8565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461027d5760405162461bcd60e51b81526020600482015260156024820152742737ba103a34329031b7b73a3930b1ba27bbb732b960591b60448201526064015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03164760405160006040518083038185875af1925050503d80600081146102ea576040519150601f19603f3d011682016040523d82523d6000602084013e6102ef565b606091505b50509050806103375760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610274565b50565b6103426104f3565b61034c6000610520565b565b610371604051806060016040528060218152602001610904602191398233610570565b600161037d82826107b9565b506001600360008282546103919190610879565b90915550503360009081526004602052604081208054600192906103b6908490610879565b909155505034156103d3576002805460ff191660011790556103de565b6002805460ff191690555b336001600160a01b03167f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad8260003411600060405161041f939291906108a0565b60405180910390a250565b6001805461043790610731565b80601f016020809104026020016040519081016040528092919081815260200182805461046390610731565b80156104b05780601f10610485576101008083540402835291602001916104b0565b820191906000526020600020905b81548152906001019060200180831161049357829003601f168201915b505050505081565b6104c06104f3565b6001600160a01b0381166104ea57604051631e4fbdf760e01b815260006004820152602401610274565b61033781610520565b6000546001600160a01b0316331461034c5760405163118cdaa760e01b8152336004820152602401610274565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b7838383604051602401610588939291906108c5565b60408051601f198184030181529190526020810180516001600160e01b03166395ed019560e01b1790526105bc565b505050565b6103378160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561060957600080fd5b813567ffffffffffffffff8082111561062157600080fd5b818401915084601f83011261063557600080fd5b813581811115610647576106476105e1565b604051601f8201601f19908116603f0116810190838211818310171561066f5761066f6105e1565b8160405282815287602084870101111561068857600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156106ba57600080fd5b81356001600160a01b03811681146106d157600080fd5b9392505050565b6000815180845260005b818110156106fe576020818501810151868301820152016106e2565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006106d160208301846106d8565b600181811c9082168061074557607f821691505b60208210810361076557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156105b757600081815260208120601f850160051c810160208610156107925750805b601f850160051c820191505b818110156107b15782815560010161079e565b505050505050565b815167ffffffffffffffff8111156107d3576107d36105e1565b6107e7816107e18454610731565b8461076b565b602080601f83116001811461081c57600084156108045750858301515b600019600386901b1c1916600185901b1785556107b1565b600085815260208120601f198616915b8281101561084b5788860151825594840194600190910190840161082c565b50858210156108695787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561089a57634e487b7160e01b600052601160045260246000fd5b92915050565b6060815260006108b360608301866106d8565b93151560208301525060400152919050565b6060815260006108d860608301866106d8565b82810360208401526108ea81866106d8565b91505060018060a01b038316604083015294935050505056fe53657474696e67206e6577206772656574696e6720272573272066726f6d202573a2646970667358221220e2ed4fb949c1cdf0626d704b47960f72f8016f9b7a9cec677da38a68f6816c1c64736f6c63430008150033",
    "sourceMap": "591:55:2:-:0;494:2377;591:55;;494:2377;591:55;;;;;;;;;;;;:::i;:::-;-1:-1:-1;649:27:2;;;-1:-1:-1;;649:27:2;;;671:5;679:31;;1102:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1145:12;-1:-1:-1;;;;;1273:26:3;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:3;;1350:1;1322:31;;;3176:51:23;3149:18;;1322:31:3;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1163:28:2::1;;::::0;494:2377;;2912:187:3;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:3;;;-1:-1:-1;;;;;;3020:17:3;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:23:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:23;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:23;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:23;;;2580:26;2531:89;-1:-1:-1;;1335:1:23;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:23;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:23;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:23;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:23:o;2735:290::-;2805:6;2858:2;2846:9;2837:7;2833:23;2829:32;2826:52;;;2874:1;2871;2864:12;2826:52;2900:16;;-1:-1:-1;;;;;2945:31:23;;2935:42;;2925:70;;2991:1;2988;2981:12;2925:70;3014:5;2735:290;-1:-1:-1;;;2735:290:23:o;3030:203::-;494:2377:2;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100955760003560e01c8063ce606ee011610059578063ce606ee01461013b578063cea49c3c1461016f578063e0a73a931461019c578063ef690cc0146101c6578063f2fde38b146101e857600080fd5b80633ccfd60b146100a1578063715018a6146100b85780638da5cb5b146100cd57806397feba9d14610104578063a41368621461012857600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100b6610208565b005b3480156100c457600080fd5b506100b661033a565b3480156100d957600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011057600080fd5b5061011a60035481565b6040519081526020016100fb565b6100b66101363660046105f7565b61034e565b34801561014757600080fd5b506100e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561017b57600080fd5b5061011a61018a3660046106a8565b60046020526000908152604090205481565b3480156101a857600080fd5b506002546101b69060ff1681565b60405190151581526020016100fb565b3480156101d257600080fd5b506101db61042a565b6040516100fb919061071e565b3480156101f457600080fd5b506100b66102033660046106a8565b6104b8565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461027d5760405162461bcd60e51b81526020600482015260156024820152742737ba103a34329031b7b73a3930b1ba27bbb732b960591b60448201526064015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03164760405160006040518083038185875af1925050503d80600081146102ea576040519150601f19603f3d011682016040523d82523d6000602084013e6102ef565b606091505b50509050806103375760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610274565b50565b6103426104f3565b61034c6000610520565b565b610371604051806060016040528060218152602001610904602191398233610570565b600161037d82826107b9565b506001600360008282546103919190610879565b90915550503360009081526004602052604081208054600192906103b6908490610879565b909155505034156103d3576002805460ff191660011790556103de565b6002805460ff191690555b336001600160a01b03167f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad8260003411600060405161041f939291906108a0565b60405180910390a250565b6001805461043790610731565b80601f016020809104026020016040519081016040528092919081815260200182805461046390610731565b80156104b05780601f10610485576101008083540402835291602001916104b0565b820191906000526020600020905b81548152906001019060200180831161049357829003601f168201915b505050505081565b6104c06104f3565b6001600160a01b0381166104ea57604051631e4fbdf760e01b815260006004820152602401610274565b61033781610520565b6000546001600160a01b0316331461034c5760405163118cdaa760e01b8152336004820152602401610274565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b7838383604051602401610588939291906108c5565b60408051601f198184030181529190526020810180516001600160e01b03166395ed019560e01b1790526105bc565b505050565b6103378160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561060957600080fd5b813567ffffffffffffffff8082111561062157600080fd5b818401915084601f83011261063557600080fd5b813581811115610647576106476105e1565b604051601f8201601f19908116603f0116810190838211818310171561066f5761066f6105e1565b8160405282815287602084870101111561068857600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156106ba57600080fd5b81356001600160a01b03811681146106d157600080fd5b9392505050565b6000815180845260005b818110156106fe576020818501810151868301820152016106e2565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006106d160208301846106d8565b600181811c9082168061074557607f821691505b60208210810361076557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156105b757600081815260208120601f850160051c810160208610156107925750805b601f850160051c820191505b818110156107b15782815560010161079e565b505050505050565b815167ffffffffffffffff8111156107d3576107d36105e1565b6107e7816107e18454610731565b8461076b565b602080601f83116001811461081c57600084156108045750858301515b600019600386901b1c1916600185901b1785556107b1565b600085815260208120601f198616915b8281101561084b5788860151825594840194600190910190840161082c565b50858210156108695787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561089a57634e487b7160e01b600052601160045260246000fd5b92915050565b6060815260006108b360608301866106d8565b93151560208301525060400152919050565b6060815260006108d860608301866106d8565b82810360208401526108ea81866106d8565b91505060018060a01b038316604083015294935050505056fe53657474696e67206e6577206772656574696e6720272573272066726f6d202573a2646970667358221220e2ed4fb949c1cdf0626d704b47960f72f8016f9b7a9cec677da38a68f6816c1c64736f6c63430008150033",
    "sourceMap": "494:2377:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2614:160;;;;;;;;;;;;;:::i;:::-;;2293:101:3;;;;;;;;;;;;;:::i;1638:85::-;;;;;;;;;;-1:-1:-1;1684:7:3;1710:6;-1:-1:-1;;;;;1710:6:3;1638:85;;;-1:-1:-1;;;;;178:32:23;;;160:51;;148:2;133:18;1638:85:3;;;;;;;;679:31:2;;;;;;;;;;;;;;;;;;;368:25:23;;;356:2;341:18;679:31:2;222:177:23;1744:656:2;;;;;;:::i;:::-;;:::i;550:38::-;;;;;;;;;;;;;;;713:51;;;;;;;;;;-1:-1:-1;713:51:2;;;;;:::i;:::-;;;;;;;;;;;;;;649:27;;;;;;;;;;-1:-1:-1;649:27:2;;;;;;;;;;;1919:14:23;;1912:22;1894:41;;1882:2;1867:18;649:27:2;1754:187:23;591:55:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2543:215:3:-;;;;;;;;;;-1:-1:-1;2543:215:3;;;;;:::i;:::-;;:::i;2614:160:2:-;1472:10;-1:-1:-1;;;;;1486:13:2;1472:27;;1464:61;;;;-1:-1:-1;;;1464:61:2;;2801:2:23;1464:61:2;;;2783:21:23;2840:2;2820:18;;;2813:30;-1:-1:-1;;;2859:18:23;;;2852:51;2920:18;;1464:61:2;;;;;;;;;2654:12:::1;2672:13;-1:-1:-1::0;;;;;2672:18:2::1;2699:21;2672:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2653:73;;;2738:7;2730:40;;;::::0;-1:-1:-1;;;2730:40:2;;3361:2:23;2730:40:2::1;::::0;::::1;3343:21:23::0;3400:2;3380:18;;;3373:30;-1:-1:-1;;;3419:18:23;;;3412:50;3479:18;;2730:40:2::1;3159:344:23::0;2730:40:2::1;2649:125;2614:160::o:0;2293:101:3:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1744:656:2:-;1899:87;;;;;;;;;;;;;;;;;;1955:12;1972:10;1899:11;:87::i;:::-;2019:8;:23;2030:12;2019:8;:23;:::i;:::-;;2062:1;2046:12;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;2087:10:2;2067:31;;;;:19;:31;;;;;:36;;2102:1;;2067:31;:36;;2102:1;;2067:36;:::i;:::-;;;;-1:-1:-1;;2215:9:2;:13;2211:74;;2235:7;:14;;-1:-1:-1;;2235:14:2;2245:4;2235:14;;;2211:74;;;2265:7;:15;;-1:-1:-1;;2265:15:2;;;2211:74;2353:10;-1:-1:-1;;;;;2338:58:2;;2365:12;2391:1;2379:9;:13;2394:1;2338:58;;;;;;;;:::i;:::-;;;;;;;;1744:656;:::o;591:55::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:3:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:3;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:3;;2700:1:::1;2672:31;::::0;::::1;160:51:23::0;133:18;;2672:31:3::1;14:203:23::0;2623:91:3::1;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:3;735:10:16;1855:23:3;1851:101;;1901:40;;-1:-1:-1;;;1901:40:3;;735:10:16;1901:40:3;;;160:51:23;133:18;;1901:40:3;14:203:23;2912:187:3;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:3;;;-1:-1:-1;;;;;;3020:17:3;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;12713:174:22:-;12798:82;12868:2;12872;12876;12814:65;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12814:65:22;;;;;;;;;;;;;;-1:-1:-1;;;;;12814:65:22;-1:-1:-1;;;12814:65:22;;;12798:15;:82::i;:::-;12713:174;;;:::o;851:129::-;922:51;965:7;265:22;131:42;265:40;;594:1;571;541:7;535:14;510:2;501:7;497:16;461:14;434:5;402:211;381:246;367:270;180:463;:::o;404:127:23:-;465:10;460:3;456:20;453:1;446:31;496:4;493:1;486:15;520:4;517:1;510:15;536:922;605:6;658:2;646:9;637:7;633:23;629:32;626:52;;;674:1;671;664:12;626:52;714:9;701:23;743:18;784:2;776:6;773:14;770:34;;;800:1;797;790:12;770:34;838:6;827:9;823:22;813:32;;883:7;876:4;872:2;868:13;864:27;854:55;;905:1;902;895:12;854:55;941:2;928:16;963:2;959;956:10;953:36;;;969:18;;:::i;:::-;1044:2;1038:9;1012:2;1098:13;;-1:-1:-1;;1094:22:23;;;1118:2;1090:31;1086:40;1074:53;;;1142:18;;;1162:22;;;1139:46;1136:72;;;1188:18;;:::i;:::-;1228:10;1224:2;1217:22;1263:2;1255:6;1248:18;1303:7;1298:2;1293;1289;1285:11;1281:20;1278:33;1275:53;;;1324:1;1321;1314:12;1275:53;1380:2;1375;1371;1367:11;1362:2;1354:6;1350:15;1337:46;1425:1;1403:15;;;1420:2;1399:24;1392:35;;;;-1:-1:-1;1407:6:23;536:922;-1:-1:-1;;;;;536:922:23:o;1463:286::-;1522:6;1575:2;1563:9;1554:7;1550:23;1546:32;1543:52;;;1591:1;1588;1581:12;1543:52;1617:23;;-1:-1:-1;;;;;1669:31:23;;1659:42;;1649:70;;1715:1;1712;1705:12;1649:70;1738:5;1463:286;-1:-1:-1;;;1463:286:23:o;1946:423::-;1988:3;2026:5;2020:12;2053:6;2048:3;2041:19;2078:1;2088:162;2102:6;2099:1;2096:13;2088:162;;;2164:4;2220:13;;;2216:22;;2210:29;2192:11;;;2188:20;;2181:59;2117:12;2088:162;;;2092:3;2295:1;2288:4;2279:6;2274:3;2270:16;2266:27;2259:38;2358:4;2351:2;2347:7;2342:2;2334:6;2330:15;2326:29;2321:3;2317:39;2313:50;2306:57;;;1946:423;;;;:::o;2374:220::-;2523:2;2512:9;2505:21;2486:4;2543:45;2584:2;2573:9;2569:18;2561:6;2543:45;:::i;3508:380::-;3587:1;3583:12;;;;3630;;;3651:61;;3705:4;3697:6;3693:17;3683:27;;3651:61;3758:2;3750:6;3747:14;3727:18;3724:38;3721:161;;3804:10;3799:3;3795:20;3792:1;3785:31;3839:4;3836:1;3829:15;3867:4;3864:1;3857:15;3721:161;;3508:380;;;:::o;4019:545::-;4121:2;4116:3;4113:11;4110:448;;;4157:1;4182:5;4178:2;4171:17;4227:4;4223:2;4213:19;4297:2;4285:10;4281:19;4278:1;4274:27;4268:4;4264:38;4333:4;4321:10;4318:20;4315:47;;;-1:-1:-1;4356:4:23;4315:47;4411:2;4406:3;4402:12;4399:1;4395:20;4389:4;4385:31;4375:41;;4466:82;4484:2;4477:5;4474:13;4466:82;;;4529:17;;;4510:1;4499:13;4466:82;;;4470:3;;;4019:545;;;:::o;4740:1352::-;4866:3;4860:10;4893:18;4885:6;4882:30;4879:56;;;4915:18;;:::i;:::-;4944:97;5034:6;4994:38;5026:4;5020:11;4994:38;:::i;:::-;4988:4;4944:97;:::i;:::-;5096:4;;5160:2;5149:14;;5177:1;5172:663;;;;5879:1;5896:6;5893:89;;;-1:-1:-1;5948:19:23;;;5942:26;5893:89;-1:-1:-1;;4697:1:23;4693:11;;;4689:24;4685:29;4675:40;4721:1;4717:11;;;4672:57;5995:81;;5142:944;;5172:663;3966:1;3959:14;;;4003:4;3990:18;;-1:-1:-1;;5208:20:23;;;5326:236;5340:7;5337:1;5334:14;5326:236;;;5429:19;;;5423:26;5408:42;;5521:27;;;;5489:1;5477:14;;;;5356:19;;5326:236;;;5330:3;5590:6;5581:7;5578:19;5575:201;;;5651:19;;;5645:26;-1:-1:-1;;5734:1:23;5730:14;;;5746:3;5726:24;5722:37;5718:42;5703:58;5688:74;;5575:201;-1:-1:-1;;;;;5822:1:23;5806:14;;;5802:22;5789:36;;-1:-1:-1;4740:1352:23:o;6097:222::-;6162:9;;;6183:10;;;6180:133;;;6235:10;6230:3;6226:20;6223:1;6216:31;6270:4;6267:1;6260:15;6298:4;6295:1;6288:15;6180:133;6097:222;;;;:::o;6324:380::-;6531:2;6520:9;6513:21;6494:4;6551:45;6592:2;6581:9;6577:18;6569:6;6551:45;:::i;:::-;6639:14;;6632:22;6627:2;6612:18;;6605:50;-1:-1:-1;6686:2:23;6671:18;6664:34;6543:53;6324:380;-1:-1:-1;6324:380:23:o;6709:480::-;6934:2;6923:9;6916:21;6897:4;6960:45;7001:2;6990:9;6986:18;6978:6;6960:45;:::i;:::-;7053:9;7045:6;7041:22;7036:2;7025:9;7021:18;7014:50;7081:33;7107:6;7099;7081:33;:::i;:::-;7073:41;;;7179:1;7175;7170:3;7166:11;7162:19;7154:6;7150:32;7145:2;7134:9;7130:18;7123:60;6709:480;;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "133": [
        {
          "start": 333,
          "length": 32
        },
        {
          "start": 531,
          "length": 32
        },
        {
          "start": 641,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "contractOwner()": "ce606ee0",
    "greeting()": "ef690cc0",
    "owner()": "8da5cb5b",
    "premium()": "e0a73a93",
    "renounceOwnership()": "715018a6",
    "setGreeting(string)": "a4136862",
    "totalCounter()": "97feba9d",
    "transferOwnership(address)": "f2fde38b",
    "userGreetingCounter(address)": "cea49c3c",
    "withdraw()": "3ccfd60b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"greetingSetter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newGreeting\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"premium\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"GreetingChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"greeting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premium\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newGreeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userGreetingCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"BuidlGuidl\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setGreeting(string)\":{\"params\":{\"_newGreeting\":\"(string memory) - new greeting to save on the contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setGreeting(string)\":{\"notice\":\"Function that allows anyone to change the state variable \\\"greeting\\\" of the contract and increase the counters\"},\"withdraw()\":{\"notice\":\"Function that allows the contractOwner to withdraw all the Ether in the contract The function can only be called by the contractOwner of the contract as defined by the iscontractOwner modifier\"}},\"notice\":\"A smart contract that allows changing a state variable of the contract and tracking the changes It also allows the contractOwner to withdraw the Ether in the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YourContract.sol\":\"YourContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/erc6551/lib/forge-std/lib/ds-test/src/\",\":erc6551/=lib/erc6551/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/erc6551/lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/erc6551/lib/openzeppelin-contracts/\",\":sstore2/=lib/erc6551/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/YourContract.sol\":{\"keccak256\":\"0xa036add5abb63d1a131b285b5d36cc3179bd9710ec108a08bcdaa6268971f5f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2faff01b2a8ea40700cc2363417f90b0f40f2a0b0225def6bf42ea0a845b4b7d\",\"dweb:/ipfs/QmY48xLiEmxeKgx81NtA5GMdzxTjiwEtfq1StpuTPyc1KM\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"node_modules/hardhat/console.sol\":{\"keccak256\":\"0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395\",\"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "greetingSetter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "newGreeting",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "premium",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GreetingChange",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "greeting",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "premium",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_newGreeting",
              "type": "string"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setGreeting"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userGreetingCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setGreeting(string)": {
            "params": {
              "_newGreeting": "(string memory) - new greeting to save on the contract"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "setGreeting(string)": {
            "notice": "Function that allows anyone to change the state variable \"greeting\" of the contract and increase the counters"
          },
          "withdraw()": {
            "notice": "Function that allows the contractOwner to withdraw all the Ether in the contract The function can only be called by the contractOwner of the contract as defined by the iscontractOwner modifier"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/erc6551/lib/forge-std/lib/ds-test/src/",
        "erc6551/=lib/erc6551/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/erc6551/lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts/=lib/erc6551/lib/openzeppelin-contracts/",
        "sstore2/=lib/erc6551/lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/YourContract.sol": "YourContract"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/YourContract.sol": {
        "keccak256": "0xa036add5abb63d1a131b285b5d36cc3179bd9710ec108a08bcdaa6268971f5f2",
        "urls": [
          "bzz-raw://2faff01b2a8ea40700cc2363417f90b0f40f2a0b0225def6bf42ea0a845b4b7d",
          "dweb:/ipfs/QmY48xLiEmxeKgx81NtA5GMdzxTjiwEtfq1StpuTPyc1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "node_modules/hardhat/console.sol": {
        "keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
        "urls": [
          "bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
          "dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/YourContract.sol",
    "id": 270,
    "exportedSymbols": {
      "Context": [
        2525
      ],
      "Ownable": [
        417
      ],
      "YourContract": [
        269
      ],
      "console": [
        12060
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2840:2",
    "nodes": [
      {
        "id": 126,
        "nodeType": "PragmaDirective",
        "src": "32:24:2",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 127,
        "nodeType": "ImportDirective",
        "src": "124:29:2",
        "nodes": [],
        "absolutePath": "node_modules/hardhat/console.sol",
        "file": "hardhat/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 270,
        "sourceUnit": 12061,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 128,
        "nodeType": "ImportDirective",
        "src": "237:52:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 270,
        "sourceUnit": 418,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 269,
        "nodeType": "ContractDefinition",
        "src": "494:2377:2",
        "nodes": [
          {
            "id": 133,
            "nodeType": "VariableDeclaration",
            "src": "550:38:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "ce606ee0",
            "mutability": "immutable",
            "name": "contractOwner",
            "nameLocation": "575:13:2",
            "scope": 269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 132,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "550:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 136,
            "nodeType": "VariableDeclaration",
            "src": "591:55:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "ef690cc0",
            "mutability": "mutable",
            "name": "greeting",
            "nameLocation": "605:8:2",
            "scope": 269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 134,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "591:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4275696c64696e6720556e73746f707061626c652041707073212121",
              "id": 135,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "616:30:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_fc2e1998e4fabd980b592d3f2694fda3ebc824815a4fa29092582e825411fd0a",
                "typeString": "literal_string \"Building Unstoppable Apps!!!\""
              },
              "value": "Building Unstoppable Apps!!!"
            },
            "visibility": "public"
          },
          {
            "id": 139,
            "nodeType": "VariableDeclaration",
            "src": "649:27:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "e0a73a93",
            "mutability": "mutable",
            "name": "premium",
            "nameLocation": "661:7:2",
            "scope": 269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 137,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "649:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 138,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "671:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "id": 142,
            "nodeType": "VariableDeclaration",
            "src": "679:31:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "97feba9d",
            "mutability": "mutable",
            "name": "totalCounter",
            "nameLocation": "694:12:2",
            "scope": 269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 140,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "679:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "709:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "id": 146,
            "nodeType": "VariableDeclaration",
            "src": "713:51:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "cea49c3c",
            "mutability": "mutable",
            "name": "userGreetingCounter",
            "nameLocation": "745:19:2",
            "scope": 269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 145,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 143,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "721:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "713:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 144,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "732:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 156,
            "nodeType": "EventDefinition",
            "src": "873:113:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad",
            "name": "GreetingChange",
            "nameLocation": "879:14:2",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "greetingSetter",
                  "nameLocation": "913:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "897:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newGreeting",
                  "nameLocation": "938:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "931:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 152,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "958:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "953:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "977:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "969:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "893:92:2"
            }
          },
          {
            "id": 169,
            "nodeType": "FunctionDefinition",
            "src": "1102:93:2",
            "nodes": [],
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1159:36:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "1163:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 165,
                      "name": "initialOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "1179:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1163:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:28:2"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 161,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 158,
                    "src": "1145:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 162,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 160,
                  "name": "Ownable",
                  "nameLocations": [
                    "1137:7:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 417,
                  "src": "1137:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1137:21:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1122:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1114:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1113:22:2"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1159:0:2"
            },
            "scope": 269,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 181,
            "nodeType": "ModifierDefinition",
            "src": "1332:202:2",
            "nodes": [],
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1351:183:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 172,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1472:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1476:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1472:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 174,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "1486:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1472:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742074686520636f6e74726163744f776e6572",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1501:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_599f77acf47a0640d46d157dc0d722ebfa13a40369ab789f8992edbc5ce5da7c",
                          "typeString": "literal_string \"Not the contractOwner\""
                        },
                        "value": "Not the contractOwner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_599f77acf47a0640d46d157dc0d722ebfa13a40369ab789f8992edbc5ce5da7c",
                          "typeString": "literal_string \"Not the contractOwner\""
                        }
                      ],
                      "id": 171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1464:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:61:2"
                },
                {
                  "id": 179,
                  "nodeType": "PlaceholderStatement",
                  "src": "1529:1:2"
                }
              ]
            },
            "name": "isOwner",
            "nameLocation": "1341:7:2",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1348:2:2"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 238,
            "nodeType": "FunctionDefinition",
            "src": "1744:656:2",
            "nodes": [],
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "1808:592:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53657474696e67206e6577206772656574696e6720272573272066726f6d202573",
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1915:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4e5e1801a562e1900b3021be50d10058f907c5e47ea2d87d1228449793b51aa",
                          "typeString": "literal_string \"Setting new greeting '%s' from %s\""
                        },
                        "value": "Setting new greeting '%s' from %s"
                      },
                      {
                        "id": 191,
                        "name": "_newGreeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "1955:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 192,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1972:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1976:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1972:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b4e5e1801a562e1900b3021be50d10058f907c5e47ea2d87d1228449793b51aa",
                          "typeString": "literal_string \"Setting new greeting '%s' from %s\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 187,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12060,
                        "src": "1899:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12060_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1907:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5371,
                      "src": "1899:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address) pure"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:87:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:87:2"
                },
                {
                  "expression": {
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 196,
                      "name": "greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "2019:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 197,
                      "name": "_newGreeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "2030:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2019:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:23:2"
                },
                {
                  "expression": {
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 200,
                      "name": "totalCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "2046:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2062:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2046:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2046:17:2"
                },
                {
                  "expression": {
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 204,
                        "name": "userGreetingCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "2067:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 207,
                      "indexExpression": {
                        "expression": {
                          "id": 205,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2087:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2091:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2087:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2067:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2102:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2067:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "2067:36:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 211,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2215:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2219:5:2",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2215:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2227:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2215:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 224,
                    "nodeType": "Block",
                    "src": "2260:25:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 220,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "2265:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2275:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2265:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 223,
                        "nodeType": "ExpressionStatement",
                        "src": "2265:15:2"
                      }
                    ]
                  },
                  "id": 225,
                  "nodeType": "IfStatement",
                  "src": "2211:74:2",
                  "trueBody": {
                    "id": 219,
                    "nodeType": "Block",
                    "src": "2230:24:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 215,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "2235:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2245:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2235:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 218,
                        "nodeType": "ExpressionStatement",
                        "src": "2235:14:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 227,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2353:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2357:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2353:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 229,
                        "name": "_newGreeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "2365:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 230,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2379:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2383:5:2",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2379:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2391:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2379:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2394:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 226,
                      "name": "GreetingChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "2338:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,bool,uint256)"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2338:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 236,
                  "nodeType": "EmitStatement",
                  "src": "2333:63:2"
                }
              ]
            },
            "documentation": {
              "id": 182,
              "nodeType": "StructuredDocumentation",
              "src": "1537:205:2",
              "text": " Function that allows anyone to change the state variable \"greeting\" of the contract and increase the counters\n @param _newGreeting (string memory) - new greeting to save on the contract"
            },
            "functionSelector": "a4136862",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGreeting",
            "nameLocation": "1753:11:2",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "_newGreeting",
                  "nameLocation": "1779:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "1765:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1765:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1764:28:2"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1808:0:2"
            },
            "scope": 269,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 263,
            "nodeType": "FunctionDefinition",
            "src": "2614:160:2",
            "nodes": [],
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "2649:125:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    245,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2659:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 262,
                      "src": "2654:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2654:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 256,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2723:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 246,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "2672:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2686:4:2",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2672:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 250,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2707:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_YourContract_$269",
                                  "typeString": "contract YourContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_YourContract_$269",
                                  "typeString": "contract YourContract"
                                }
                              ],
                              "id": 249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2699:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 248,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2699:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2699:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2713:7:2",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2699:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2672:50:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2672:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2653:73:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 258,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "2738:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2747:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2730:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2730:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2730:40:2"
                }
              ]
            },
            "documentation": {
              "id": 239,
              "nodeType": "StructuredDocumentation",
              "src": "2403:209:2",
              "text": " Function that allows the contractOwner to withdraw all the Ether in the contract\n The function can only be called by the contractOwner of the contract as defined by the iscontractOwner modifier"
            },
            "functionSelector": "3ccfd60b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 242,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 241,
                  "name": "isOwner",
                  "nameLocations": [
                    "2641:7:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 181,
                  "src": "2641:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2641:7:2"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2623:8:2",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2631:2:2"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2649:0:2"
            },
            "scope": 269,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 268,
            "nodeType": "FunctionDefinition",
            "src": "2840:29:2",
            "nodes": [],
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "2867:2:2",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 264,
              "nodeType": "StructuredDocumentation",
              "src": "2777:61:2",
              "text": " Function that allows the contract to receive ETH"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2847:2:2"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2867:0:2"
            },
            "scope": 269,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 130,
              "name": "Ownable",
              "nameLocations": [
                "519:7:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 417,
              "src": "519:7:2"
            },
            "id": 131,
            "nodeType": "InheritanceSpecifier",
            "src": "519:7:2"
          }
        ],
        "canonicalName": "YourContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 129,
          "nodeType": "StructuredDocumentation",
          "src": "291:202:2",
          "text": " A smart contract that allows changing a state variable of the contract and tracking the changes\n It also allows the contractOwner to withdraw the Ether in the contract\n @author BuidlGuidl"
        },
        "fullyImplemented": true,
        "internalFunctionIDs": {
          "3991": 1
        },
        "linearizedBaseContracts": [
          269,
          417,
          2525
        ],
        "name": "YourContract",
        "nameLocation": "503:12:2",
        "scope": 270,
        "usedErrors": [
          283,
          288
        ],
        "usedEvents": [
          156,
          294
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 2
}